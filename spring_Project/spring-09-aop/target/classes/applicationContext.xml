<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--通过注册bean，生成对象，scope = singleton-->
    <bean id="userService" class="com.sherlock.service.UserServiceImp"/>
    <bean id="log" class="com.sherlock.log.Log"/>
    <bean id="afterlog" class="com.sherlock.log.AfterLog"/>

    <!--Annotation 实现 AOP-->
    <bean id="annotationPointCut" class="com.sherlock.diy.AnnotationPointCut"/>
    <!--开启注解的支持 默认JDK:基于接口 cglib:基于类-->
    <!--proxy-target-class="false"-->
    <aop:aspectj-autoproxy />

    <!--使用Spring原生API  配置aop-->
<!--    <aop:config>
        &lt;!&ndash;切入点  execution(切入位置)&ndash;&gt;
        <aop:pointcut id="pointcut" expression="execution(* com.sherlock.service.UserServiceImp.*(..))"/>

        &lt;!&ndash;执行环绕&ndash;&gt;
        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="afterlog" pointcut-ref="pointcut"/>
    </aop:config>-->

    <!--使用自定义类  配置aop-->
    <!--<bean id="diy" class="com.sherlock.diy.DiyPointCut"/>
    <aop:config>
        <aop:aspect ref="diy" >
            &lt;!&ndash;切入点&ndash;&gt;
            <aop:pointcut id="diyPointCut" expression="execution(* com.sherlock.service.UserServiceImp.*(..))"/>
            &lt;!&ndash;通知&ndash;&gt;
            <aop:before method="beforeDIY" pointcut-ref="diyPointCut"/>
            <aop:after method="afterDIY" pointcut-ref="diyPointCut"/>
        </aop:aspect>
    </aop:config>-->



</beans>
